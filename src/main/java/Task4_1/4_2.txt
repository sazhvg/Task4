
Напиши відповіді на питання

• Що таке рефакторінг.

        Це процес змінення внутрішньої структури програмы, який не змінює її зовнішньої поведінки.

• Якими можуть бути причини рефакторінгу.

        Спрощення розуміння та сприйняття роботи програми.
        Оптимізація та збільшення якості коду.
        Пошук помилок.
        Спрощення додавання нової логіки.


• Які є передумови для рефакторингу.

        Виведення продукту на ринок.
        Наявність довгих методів.
        Наявність складних об'ємних класів.


• Які є проблеми довгих методів. Який найефективніший захід вирішення.

        Сложні для сприйняття.

        Захід для вирішення: розділення на окремі методи, що вирішують окремі завдання (приклад: функція
        перевірки окремо від функції присвоювання).


• Коли варто створювати додатковий метод.

        Коли цей метод можлово використовувати в іншому місті.
        Коли такаж задача ще не була реалізована десь в іншому місті (варто пошукати код в іншому місті, щоб не дублювати).



• Що таке «магічні» числа та як їх правильно робити.

        Магічні числа — це числові значення, що зустрічаються в коді, але при цьому не очевидно,
        що вони означають. Це ускладнює розуміння програми, а також її рефакторинг.

        Правильно робити: Створення константи з описом у назві функціонального призначення.


• Недоліки дублювання коду. Який є спосіб боротьби.

        Сбільшує обсяг програми, ускладнює роботу с кодом та виправлення помилок.
        Ускладнює тестування.

        Використання спеціалізованих інструментів для пошуку дубльованого коду.
        Шляхом ручного перегляду коду з метою пошуку дублювання.

        Використання узагальнень.
        Виділення шаблонного методу.
