package Task4_4;

import Task4_4.model.packaging.Box;
import Task4_4.model.part.Cube;
import Task4_4.model.part.Part;
import Task4_4.model.part.Sphere;
import Task4_4.model.part.Tetrahedron;

import java.util.Collection;
import java.util.List;

public class Application {

    public static void main(String[] args) {
        // Упустимо код отримання списку деталей, задамо його безпосередньо перед викликом потрібного коду

        // Деталі
//        Collection<Part> list1 = List.of(
        Collection<Part> partsList = List.of(
                new Cube(450, 0.1),
                new Cube(300, 0.2),
                new Sphere( 150, 0.3),
                new Tetrahedron(250, 0.2),
                new Cube(350, 0.2),
                new Sphere(100, 0.1)
        );

        // Коробки
//        Collection<Box> list2 = List.of(
        Collection<Box> boxesList = List.of(
                new Box(700),
                new Box(500),
                new Box(500),
                new Box(500),
                new Box(400),
                new Box(400),
                new Box(400),
                new Box(300),
                new Box(300),
                new Box(200)
        );

        int boxPackagingPricePerMeter = 40; // в копійках

//        new PartsProcessor().packageParts(list1, list2, boxPackagingPricePerMeter); // Підказка: в цьому виклику складно розібратися з сігнатурою через погані імена змінних.
        new PartsProcessor().packageParts(partsList, boxesList, boxPackagingPricePerMeter);

    }
}

/*
    Напиши програмне забезпечення, що буде допомагати працівникам відділу пакування на виробництві з виготовлення
    металевих деталей робити вибір оптимального пакування для деталей, що потребують відправлення до споживачів.

        Виробництво виготовляє деталі таких форм:
        кубічна,
        сферична,
        у формі правильного тетраедру (трикутна піраміда, в якій довжини всіх ребер є рівні між собою).
        Деталі можуть відливатися з різних сплавів металів (визначається замовником), що впливає на масу виготовленої
        деталі. Кожний сплав характеризується густиною, яка відома для кожної деталі на додачу до її розмірів.

        Відділ пакування отримує на вхід розміри ящиків, які наявні на складі.

        Ящики, що потрапляють на склад є лише суворо кубічної форми (тобто висота, ширина та глибина ящику рівні).
        Вартість ящиків напряму залежить від кількості матеріалу, що витрачається на його виготовлення.

        Вартість одиниці площі пакувального матеріалу відома наперед.

        Відділ пакування розраховує загальну вартість пакування та має обрати надешевше серед можливих пакувань.

        Перед пакуванням кожна деталь має бути вкрита шаром захисного пакування. Кількість захисного матеріалу
        визначається масою деталі. Його необхідна товщина прямо пропорційна вазі деталі і розраховується виходачи
        з формули 1 см матеріалу на 10 кг деталі.

        Виробництво може забезбечити будь-яку товщину захисного пакування, залежно від потреби.

        Обирати ящик потрібно з урахуванням товщини обов'язкового захисного пакування.

        На вхід програма отримує таке:

        характеристики виготовлених деталей - тип фігури, базові розміри, густину матеріалу
        наявні ящики для пакування разом із ціною за одиницю пакувального матеріалу
        Програма має почергово для кожної деталі зі списку визначити чи може вона бути розміщена у наявних ящиках,
        обравши найдешевший варіант. Після обрання ящику програма виводить інформацію стосовно вибору ящику та його
        вартості. Ящик резервується і більше не доступний для пакування іншим деталям. Якщо деталь наразі не може
        бути упакована, програма про це повідомляє і переходить до пакуавння наступної деталі.

        ! Завдання: застосовуючи знання, отримані на уроці, виправи помилки допущені в коді. Місця відмічені
        словом "підказка" виправити обов'язково.*/
